package com.cai.easyuse.database.dao;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import com.cai.easyuse.database.core.IDaoConfig;

import android.database.sqlite.SQLiteDatabase;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private Map<Object, DaoConfig> mDaoConfigs;
    private Map<Object, AbstractDao> mEntityDaos;

    private Map<Class<? extends AbstractDao<?, ?>>, DaoConfig> mDaoConfigMap;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);
        mDaoConfigs = new HashMap<Object, DaoConfig>();
        mEntityDaos = new HashMap<Object, AbstractDao>();
        mDaoConfigMap = daoConfigMap;

    }

    /**
     * 注册dao
     *
     * @param conf
     * @param <T>
     */
    public <T> void registerDao(IDaoConfig conf) {
        if (null != mDaoConfigMap) {
            DaoConfig config = mDaoConfigMap.get(conf.getClazz()).clone();
            super.registerDao(conf.getClazz(), conf.getDao(config, this));
            config.initIdentityScope(conf.getType());
            mDaoConfigs.put(conf.getClazz(), config);
            mEntityDaos.put(conf.getClazz(), conf.getDao(config, this));
        }
    }

    /**
     * 清除
     */
    public void clear() {
        if (null != mDaoConfigs) {
            Iterator<Object> keys = mDaoConfigs.keySet().iterator();
            while (keys.hasNext()) {
                Object key = keys.next();
                mDaoConfigs.get(key).getIdentityScope().clear();
            }
        }
    }

    /**
     * 使用类class
     *
     * @param key
     * @param <T>
     * @return
     */
    public <T extends AbstractDao> T getTableEntityDao(Object key) {
        if (null != mEntityDaos) {
            return (T) mEntityDaos.get(key);
        }
        return null;
    }

}
